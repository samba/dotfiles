#!/usr/bin/env zsh


function retryloop () {
    local timeout=$1; shift;

    while ! $@ ; do sleep ${timeout} ; done
}

# NB: this probably won't work with zim title plugin
function set_terminal_title () {
    echo -en "\e]2;$@\a"
}


function gen_passwd () {
    printf "%s\n" "$(tr -dc A-Za-z0-9 </dev/urandom | head -c ${1:-13})"
}

function brew_cask_upgrade () {
    command -v brew && brew upgrade $(brew outdated --cask --greedy --quiet)
}


function ssh_fingerprints () {
  find ${HOME}/.ssh -name '*rsa' | while read f; do
  echo $(ssh-keygen -E md5  -lf "${f}") "($f)"
  done
}


# Simple shortcut for read-only vim w/ arbitrary filetype coloring
function cview () {
  local ft="$1"; shift;
  if test $# -eq 0; then
    vim -R -c "set ft=${ft}" -
  else
    vim -R -c "set ft=${ft}" "$@"
  fi
}

function tma () {
    tmux new-session -A -s ${1:-main}
}


function _znote () {

    local notesdir="${NOTES:-${HOME}/.notes}"
    local vimopts="--ttyfail -p"

    local bin_search="grep"

    command -v ag > /dev/null && bin_search="ag"

    mkdir -p "${notesdir}"

    local help=() search=() edit=() title=()

    zparseopts -D -E -K -- \
        {t,-title}:=title \
        {s,-search}=search \
        {e,-edit}=edit \
        {h,-help}=help \
        || return 1


    # Remove meaningless defaults...
    title=("${(@)title:#-t}")

    echo -e "title: ${title}\nsearch: $#search ${search}\nedit: $#edit ${edit}\nhelp: $#help ${help}\n@: ${@}\n" >&2

    if (( $#help )) ; then
        echo "usage: ${0} [-e] [-s] [-t title] [-- <more search args>]"
        echo "\t -e        \t Edit these files, instead of just listing them."
        echo "\t -s        \t Search (using grep) all notes for a given pattern. List these files."
        echo "\t -t <title>\t Look for a specific note of a given title. If found list this file."
        echo "Options -s with terminal arguments (-- [args]) will pass them to grep directly."
        return 0
    fi

    if (( $#title )) ; then
        fname="$(echo "${title[@]}" | tr -C -s '[:alnum:]' '-' | tr -s '[:upper:]' '[:lower:]' | sed 's@-$@@')"
        fname="${notesdir}/${fname%%.md}.md"

        if (( $#edit )) ; then
            test -f ${fname} || echo -e "---\ntitle: ${title[@]}\ndate: $(date)\n---" >> ${fname}

            case ${EDITOR} in
                *vim) ${EDITOR} ${vimopts} ${fname} ;;
                *) ${EDITOR} ${fname} ;;
            esac
        else
            ls -alh ${fname}
            return
        fi
    fi

    if (( $#search )) ; then

        if (( $#edit )) ; then
            case ${EDITOR} in
                *vim)
                    zargs -- $(${bin_search} -lr "${(@)@:#--}" ${notesdir}) -- ${EDITOR} ${vimopts}
                    ;;
                *)
                    zargs -- $(${bin_search} -lr "${(@)@:#--}" ${notesdir}) -- ${EDITOR}
                    ;;
            esac
        else

            ${bin_search} -r "${(@)@:#--}"  ${notesdir}
            return
        fi

    fi


}

function pasteup () {
    curl --data-binary @${1:-"-"} https://paste.rs/
}

function pastedel () {
    curl -X DELETE https://paste.rs/${1}
}

