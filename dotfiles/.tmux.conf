# Tmux settings

# Set colors
set-option -g default-terminal "screen-256color"
set -ga terminal-overrides ",*:Tc"

# set -g status-bg colour208
# set -g status-fg black



# Configure escape vim for Neovim.
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -sg escape-time 10

# Count sessions start at 1
set -g base-index 1

# Enable focus-events to enable vim to refresh accordingly.
set-option -g focus-events on

# Enable mouse in tmux.  Note that this will interfere with mouse selection.
# In iterm2, hold down opt to enable normal mouse selection while mouse mode
# is on in tmux.
set -g mouse on

set -g history-limit 50000

# Set XTerm key bindings
setw -g xterm-keys on

# Use vim bindings
setw -g mode-keys vi


# Enable pbcopy/pbpaste in tmux.
if-shell \
  'test "$(uname -s)" = Darwin && type reattach-to-user-namespace > /dev/null' \
  'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Set default shell
if-shell \
	'test "$(command -v zsh)" = "/usr/bin/zsh"  >/dev/null' \
	'set-option -g default-shell /usr/bin/zsh'


abbreviated_path="#{s|([A-Za-z])[^/]*/|\\1/|:#{s|${HOME}|~|:pane_current_path}}"

set-option -g set-titles on
set-option -g set-titles-string "tmux:#S:#{pane_current_command} #{pane_title}"

set-option -wg allow-rename on
set-option -wg automatic-rename on


# This sets current tmux prefix to the already default Ctrl+B, but makes it easy to change your prefix in the future
# Just modify C-b in the next two lines with any combination you like. C is for Control key, M for Alt.
unbind C-b
set-option -g prefix C-b
bind-key C-b send-prefix


# Emulate "C-a C-a" from screen, but with "C-b"
bind -N "Switch to last active window"  C-b last-window

# Emulate "C-a Tab" of screen
bind -N "Switch to last active pane" Tab last-pane


# Set reload key to r
#bind r source-file ~/.config/tmux/tmux.conf
bind -N "Reload tmux configuration" r source-file ~/.tmux.conf


# Remap window navigation to vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

bind -N "Select next layout" C-N select-layout -n


# Resize the current pane using Alt + direction
bind -n M-k resize-pane -U
bind -n M-j resize-pane -D
bind -n M-h resize-pane -L
bind -n M-l resize-pane -R

# Open new panes and windows in current directory.
bind -N "Split window horizontally with current path" '%' split-window -h -c '#{pane_current_path}'
bind -N "Split window vertically with current path" '"' split-window -v -c '#{pane_current_path}'
bind -N "Create a new window with current path" c new-window -c '#{pane_current_path}'
bind -N "Choose a window from a menu" ' ' choose-tree -F "#{p15:#{=15:window_name}} #{p3:#{=3:window_flags}} #{p30:#{=30:pane_title}}  #{?window_bell_flag,!!,} #{t/f/%H#:%M:window_activity} "

# Always load htop on start.
neww -n "htop" htop -H 2 --sort-key=PERCENT_CPU

set -g status-position top

# Import status line configuration
if-shell "[ -f ~/.tmux.status.conf ]" 'source ~/.tmux.status.conf'


# NB:  I've replaced tmux-power with a static config generator
# See dotfiles/generic/tmux_linegen.py

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'wfxr/tmux-net-speed'


set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-save-interval '5'

set -g @yank_selection_mouse 'clipboard'

set -g @emulate-scroll-for-no-mouse-alternate-buffer on



run '~/.tmux/plugins/tpm/tpm'


# Any other local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'




