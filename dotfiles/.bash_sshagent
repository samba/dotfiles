#!/usr/bin/env bash
# Loads SSH keys in a sensible fashion

# This script may get populated with commands for loading keys
CURSOR_SCRIPT=${HOME}/.ssh/keycursor.sh




mac_keychain_present () {
	command security list-keychains >/dev/null 2>/dev/null </dev/null
}

ssh_agent_avail () {
		test -z "$SSH_AGENT_PID" && return 1
		test -r "$SSH_AUTH_SOCK" || return 1
		shopt -q login_shell || return 1
		which ssh-add >/dev/null || return 1
}



# prompt template is "Enter passphrase for <filename>:"
print_key_password () {
	fname="$( echo "${@}" | sed 's@Enter passphrase for@@' | tr -d "[:space:]:" )"
	test -f "$fname" && test -f "${fname}.password" && cat "${fname}.password"
}


write_printer_script () {
	echo "#!/usr/bin/env bash" > ${1}
	# NOTE: for future work, multiple functions can be passed here to populate the script.
	type print_key_password | sed '/is a function/d' >> ${1}
	echo "print_key_password \"\${@}\"" >> ${1}  # the main function call
	chmod +x ${1}
}


list_unregistered_keys () {
	find "${HOME}/.ssh" -type f -name '*rsa' \
		| grep -v -f <(ssh-add -l 2>/dev/null | cut -d ' ' -f 3)
}


configure_ssh_agent () {
	# automatically add keychain-provided keys
	ssh-add -q -A 1>/dev/null 2>/dev/null

	# Discover keys that are not already known
	if mac_keychain_present; then # load keys for mac
		list_unregistered_keys | xargs ssh-add -q -K 1>/dev/null 2>/dev/null
	else # load keys for linux
		write_printer_script ${CURSOR_SCRIPT}
		list_unregistered_keys | while read i; do
			DISPLAY=nothing:0 SSH_ASKPASS=${CURSOR_SCRIPT} setsid ssh-add "$i"
		done
	fi

	# List known keys
	ssh-add -l
}

if shopt -q login_shell; then
	which ssh-agent >/dev/null && \
		test -z "$SSH_AGENT_PID" && \
		eval "$(ssh-agent -s 2>/dev/null)" 1>/dev/null

	ssh_agent_avail && configure_ssh_agent
	echo
fi

