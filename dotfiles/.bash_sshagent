#!/usr/bin/env bash
# Loads SSH keys in a sensible fashion

# set -x

test -f "${HOME}/.ssh/agent.sh" && source "${HOME}/.ssh/agent.sh"

ssh_agent_avail () {
	# This is an interactive shell
	shopt -q login_shell || return 1

	# The agent PID is defined
	test -z "$SSH_AGENT_PID" && return 1

	# The agent is running
	command ps -o command ${SSH_AGENT_ID} | tail -n 1 | grep 'ssh-agent'  || return 1

	# The agent socket exists
	test -r "$SSH_AUTH_SOCK" || return 1

	# The ssh-add program is available
	command -v ssh-add >/dev/null || return 1

}

ssh_agent_list_known_keys () {
    ssh-add -l | grep -v 'has no identities' 2>/dev/null
}

ssh_keys_empty () {
    test "$(ssh_agent_list_known_keys | wc -l)" -eq 0
}


scan_known_keys () {
	ssh_agent_list_known_keys | cut -d ' ' -f 3
}

configure_ssh_agent () {

    echo "Loading SSH keys" >&2

	# automatically add keychain-provided keys
	ssh-add -q -A 1>/dev/null 2>/dev/null

	# Discover keys that are not already known
	find "${HOME}/.ssh" -type f -name '*rsa' \
		| grep -v -f <(scan_known_keys) \
		| xargs ssh-add -q -K 1>/dev/null #  2>/dev/null

}


# Initialize the SSH agent if absent
test -z "$SSH_AGENT_PID" && \
  test ! -r "$SSH_AUTH_SOCK" && \
  command -v ssh-agent >/dev/null && \
  eval "$(ssh-agent -s 2>/dev/null)" 1>/dev/null


# Load keys, etc...
# This is a bit slow due to filesystem scan, so it runs in the background.
test -r "$SSH_AUTH_SOCK" && \
  command -v ssh-add >/dev/null && \
  ssh_keys_empty && configure_ssh_agent


# set +x
