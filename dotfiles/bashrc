#!/bin/sh
# Configuration for interactive shells

export EDITOR=`which vim nano | head -n 1`

# Configure history backlog
export HISTCONTROL=ignoreboth:erasedups
export HISTIGNORE=history:jobs:fg:bg
export HISTSIZE=20000
export HISTTIMEFORMAT='%F %T '

# Update history file on every command
export PROMPT_COMMAND="history -a; ${PROMPT_COMMAND:-:}"

shopt -s checkwinsize
shopt -s cdspell
shopt -s hostcomplete 
shopt -s histappend
shopt -s cmdhist
shopt -s histreedit
# shopt -s mailwarn


case $TERM in
  screen*) 
    # Mark the end of the prompt for SCREEN
    export PROMPT_COMMAND="${PROMPT_COMMAND:-:}; printf \"\033k\033\134\""
    printf -v title "%s" '\[\e]0;\u@\h: \W\a\]' # sets hardstatus  with username, host, etc.
    [ -z "$SSH_TTY" ] && printf '%bk%s%b%b' \\033 "${HOSTNAME%%.*}" \\033 \\0134
    ;;
  linux|xterm*|gnome*|*color*)
    export color_prompt=on;
    ;;
esac

# Enable color for other shells...
[ -z "$COLORTERM" ] || export color_prompt=on;

# Disable color for non-interactive shells.
[ -z "$PS1" ] && export color_prompt=off;

case ${color_prompt} in
  on)

    color_now=36 # cyan
    color_user=32 # green
    color_host=33 # yellow
    color_dir=34 # blue
    color_chroot=31 # red
    color_shell=32 # none

    # username: red, if root or UID=0
    if [ $USER = 'root' ] || [ $UID -eq 0 ]; then 
      color_user=31; 
      color_shell=31;
    fi
   
    printf -v bell '\a'
    printf -v now '\[\e[00;%dm\]\\t\[\e[0m\]' $color_now
    printf -v user '\[\e[01;%dm\]\u\[\e[0m\]' $color_user
    printf -v host '\[\e[01;%dm\]\h\[\e[0m\]' $color_host
    printf -v workdir '\[\e[01;%dm\]\W\[\e[0m\]' $color_dir
    printf -v chroot '\[\e[01;%dm\]%s\[\e[0m\]%s' $color_chroot "$ch" "$chroot_trail" # no trailing space
    printf -v shell '\[\e[00;%dm\]\\$\[\e[0m\] ' $color_shell # trailing space
    printf -v jobs '\j' # no formatting


    # Throw it all together
    printf -v PS1 '%c%s%s%s %s@%s %s %s %s' "$bell" "$title" "$chroot" "$now" "$user" "$host" "$workdir" "$jobs" "$shell"

    PS2='\[\e[00;33m\]>\[\e[0m\] '
    PS3='> ' # PS3 doesn't get expanded like 1, 2 and 4
    PS4='\[\e[01;31m\]+\[\e[0m\]'

    ;;
esac

seldir () {
  [ $# -gt 0 ] && dirs -v | egrep "$@" || dirs -v
  read -p "Directory number: " dirnum
  [ -z "$dirnum" ] || pushd +${dirnum} >/dev/null 2>/dev/null
  echo "#" `pwd`
}

crypto () {
  case $1 in
    encrypt) openssl aes-256-cbc -e -in "${2}" -out "${2}.aes";;
    decrypt) openssl aes-256-cbc -d -in "${2}" -out "${2%.aes}";;
  esac
}
