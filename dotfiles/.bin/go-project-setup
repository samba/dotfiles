#!/usr/bin/env bash

# Prepares a project directory as a Go code repository

set -euf -o pipefail

fail () {
    echo "$2" >&2
    exit $1
}

test $# -eq 1 || fail 1 "Please provide a directory to prepare as a Go project."
test -d "$1" || fail 1 "Please provide a directory to prepare as a Go project."

cd "$1"

mkdir -p api pkg cmd vendor web configs scripts build deployments test/data docs tools

touch README.md

test -f Makefile || >>Makefile cat <<EOD
PKGFILES = \$(shell find pkg -type f -name '*.go')
PKGDIR = \$(shell find pkg -mindepth 1 -type d)

GOOS := \$(shell go env GOOS)
GOARCH := \$(shell go env GOARCH)

CMD_DIRS := \$(shell find ./cmd -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)


all: tidy test commands
commands: \$(addprefix build/,\$(CMD_DIRS))


build/%: build/o/%-\$(GOOS)-\$(GOARCH)
	cp -v \$< \$@


build/o/%-\$(GOOS)-\$(GOARCH): cmd/%/main.go \$(PKGFILES)
	mkdir -p \$(@D)
	go build -o \$@ $<


style:
	go vet ./...
	gofmt -l -s \$(PKGFILES)

clean:
	rm -v \$(addprefix build/,\$(CMD_DIRS)) \\
		build/o/*

tidy:
		go mod verify && go mod tidy

test:
	go test -v ./...
EOD


if test -f go.sum ; then
    go mod verify
else
    go mod init
fi
