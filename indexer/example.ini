[DEFAULT]
audio=(mp3|wma|ogg|wav)
flags=eval:re.I
subject=<basename>
type=file
output=%(_relpath)s





[allmusic.m3u]
; standard path expressions, where '*.ext' becomes all files ending in '.ext'
find=*.%(audio)s

; this pushes a newline-separated list to the pipe command - in this case forming an M3U playlist
; the pipe's output will be pushed to the file (per section name)
pipemode=all:%(_relpath)s
pipepass=stdin
pipe=fapg -s -f m3u
; pipescan has no relevance for pipemode=all
; output is ignored for pipemode=all (since the pipe's output becomes the final result)




[metallica.m3u]
; prefix regular expression with 'r:' to use full python RegExp patterns
find=r:(.*)(?P<artist>[mM]etallica)(.*)\.%(audio)s
; this one will be a basic list of absolute paths (which happens to be M3U compatible)
output=# %(artist)s\n%(_abspath)s




[outputscan.txt]
find=*.%(audio)s

; for each matching file, run ${pipe}, and scan for <user> and <group> values
pipemode=each
pipe=stat -c %%U:%%G %(_relpath)s
pipescan=r:(?P<user>[^:]*):(?P<group>.*)

; this will produce a list based on the results of scanning the pipe output
output=%(_basename)s >> user:%(user)s group:%(group)s


[symlink.dir]
type=dir
find=*.%(audio)s
; this will produce a directory of symlinks to the matching files
pipemode=each
pipe=ln -s %(_relpath)s %(_base)s.%(_u_key)s%(_ext)s

output=eval:None


